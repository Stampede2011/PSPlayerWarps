buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

plugins {
    id 'java'
    id 'org.spongepowered.plugin' version '0.9.0'
}

compileJava.options.encoding = 'UTF-8'

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.plugin'

version = "1.12.2-1.0.0"
group = 'io.github.stampede2011'
archivesBaseName = "PSPlayerWarps"

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        name = 'JitPack'
        url = 'https://jitpack.io/'
    }
    maven {
        name 'Sponge maven repo'
        url 'http://repo.spongepowered.org/maven'
    }
}

dependencies {
    compile 'org.spongepowered:spongeapi:7.2.0'
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.github.rojo8399:PlaceholderAPI:master-SNAPSHOT'
    compile 'com.github.codehusky:HuskyUI-Plugin:v0.6.0-PRE4'
    compile 'com.github.Eufranio:StorageUtils:2.2'
    compile('com.github.bloodmc:GriefDefenderAPI:master-SNAPSHOT')
    annotationProcessor("org.spongepowered:spongecommon:1.12.2-7.2.0:dev")
    provided("org.spongepowered:spongecommon:1.12.2-7.2.0:dev") {
        exclude(module: "commons-io")
        exclude(module: "gson")
        exclude(module: "guava")
        exclude(module: "launchwrapper")
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
